{"version":3,"sources":["App.module.css","Component/WorldDataCard/WorldCard.module.css","Component/WorldDataCard/WorldCard.js","Component/Charts/BarChart.js","Component/Charts/PieChart.js","API/Json.js","Component/Charts/Test.js","API/EChartTheme.js","AllComponent.js","App.js","index.js"],"names":["module","exports","WorldCard","data","date","className","style","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","variant","TotalConfirmed","color","NewConfirmed","window","Date","toDateString","recovered","TotalRecovered","NewRecovered","deaths","TotalDeaths","NewDeaths","height","width","BarChart","option","title","text","subtext","left","top","tooltip","trigger","axisPointer","type","legend","grid","right","bottom","containLabel","xAxis","boundaryGap","yAxis","series","name","theme","PieChart","formatter","toolbox","show","feature","mark","dataView","readOnly","magicType","restore","saveAsImage","radius","center","roseType","label","emphasis","value","urlSummary","fetchGlobalSummary","a","axios","get","Global","console","log","fetchCountrySummary","Countries","modifiedData","find","Country","Chart","countriesNames","useStyles","makeStyles","root","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","AllComponent","handleClick","countryName","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","map","index","ListItem","button","key","selected","onClick","ListItemIcon","ListItemText","primary","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","Charts","MainPage","state","dailyData","updateTime","dailySeries","summarydata","setState","this","echarts","registerTheme","echartsTheme","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36fc4176.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"App_card__1NVFi\",\"lineCard\":\"App_lineCard__1PdcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WorldCard_container__2bCMo\",\"card\":\"WorldCard_card__201_P\",\"infected\":\"WorldCard_infected__3LWTm\",\"recovered\":\"WorldCard_recovered__3eOw5\",\"deaths\":\"WorldCard_deaths__3vEbG\"};","import React, { useState } from 'react'\r\nimport { Card, Grid, CardContent, Typography } from '@material-ui/core'\r\nimport style from './WorldCard.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nconst WorldCard = ({ data,date }) => {\r\n\r\n\r\n    if (!data) {\r\n        return \"Loading...\";\r\n    }\r\n\r\n  \r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <Grid container spacing={1} justify='center'>\r\n                <Grid item xs={12} md={3}\r\n                    component={Card}\r\n                    className={cx(style.card, style.infected)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography variant='body1'>\r\n                            Confirmed : {data.TotalConfirmed}\r\n                    \r\n                        </Typography>\r\n                        <Typography color='error' variant='body1' >\r\n                            New : {data.NewConfirmed}\r\n                          \r\n                        </Typography>\r\n                        <Typography variant=\"body1\" color='textSecondary'>\r\n                        Last update time : {new window.Date(date).toDateString()}\r\n                        </Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item xs={12} md={3}\r\n                    component={Card}\r\n                    className={cx(style.card, style.recovered)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography variant='body1'>\r\n                            Recovered : {data.TotalRecovered}\r\n                        </Typography>\r\n                        <Typography color='error' variant='body1'>\r\n                            New : {data.NewRecovered}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" color='textSecondary'>\r\n                        Last update time : {new window.Date(date).toDateString()}\r\n                        </Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item xs={12} md={3}\r\n                    component={Card}\r\n                    className={cx(style.card, style.deaths)}\r\n                >\r\n                    <CardContent>\r\n                        <Typography variant='body1'>\r\n                            Deaths : {data.TotalDeaths}\r\n                        \r\n                        </Typography>\r\n                        <Typography color='error' variant='body1'>\r\n                            New : {data.NewDeaths}\r\n                      \r\n                        </Typography>\r\n                        <Typography variant=\"body1\" color='textSecondary'>\r\n                            Last update time : {new window.Date(date).toDateString()}\r\n                        </Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorldCard;","import * as React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\n\r\n\r\n//Chart style\r\nconst style = {\r\n    height: \"70vh\",\r\n    width: \"100%\",\r\n};\r\n\r\nconst BarChart = ({ data }) => {\r\n\r\n    if (!data) {\r\n        return \"Loading...\";\r\n    }\r\n\r\n    let option = {\r\n        \r\n        title: {\r\n            text: 'Bar Chart',\r\n            subtext: '',\r\n            left:'center',\r\n            top:'5%'\r\n        },\r\n        tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n                type: 'shadow'\r\n            },\r\n        },\r\n        legend: {\r\n            top:'12%',\r\n            data: ['Total', 'New']\r\n        },\r\n        grid: {\r\n            left: '3%',\r\n            right: '14%',\r\n            bottom: '10%',\r\n            top:'20%',\r\n            containLabel: true\r\n        },\r\n        xAxis: {\r\n            type: 'value',\r\n            boundaryGap: [0, 0.01]\r\n        },\r\n        yAxis: {\r\n            type: 'category',\r\n            data: ['Confirmed', 'Recovered', 'Deaths']\r\n        },\r\n        series: [\r\n            \r\n            {\r\n                name: 'Total',\r\n                type: 'bar',\r\n                data: [\r\n                    data.TotalConfirmed/10000, \r\n                    data.TotalRecovered/10000, \r\n                    data.TotalDeaths/10000\r\n                ]\r\n                \r\n            },\r\n            {\r\n                name: 'New',\r\n                type: 'bar',\r\n                data: [\r\n                    data.NewConfirmed/10000,\r\n                    data.NewConfirmed/10000,\r\n                    data.NewConfirmed/10000\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n    \r\n\r\n    return (\r\n        <ReactEcharts option={option} theme='theme' style={style} className=\"pie-chart\" />\r\n    );\r\n}\r\n\r\nexport default BarChart;","import * as React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\n\r\n//Chart style\r\nconst style = {\r\n    height: \"60vh\",\r\n    width: \"100%\"\r\n};\r\n\r\n\r\nconst PieChart = ({data}) => {\r\n    if(!data){\r\n        return \"Loading...\"\r\n    }\r\n    //Chart options\r\n    let option = {\r\n        title: {\r\n            text: 'Pie Chart',\r\n            subtext: '',\r\n            left: 'center',\r\n            top:'5%'\r\n        },\r\n        tooltip: {\r\n            trigger: 'item',\r\n            formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n        },\r\n        legend: {\r\n            \r\n            top: '15%',\r\n            \r\n            data: ['Confirmed        ', 'New Confirmed ', 'Recovered',\r\n                'New Recovered', 'deaths               ', 'new deaths'],\r\n            left: '10%',\r\n            \r\n        },\r\n        toolbox: {\r\n            show: false,\r\n            feature: {\r\n                mark: { show: true },\r\n                dataView: { show: true, readOnly: false },\r\n                magicType: {\r\n                    show: true,\r\n                    type: ['pie', 'funnel']\r\n                },\r\n                restore: { show: true },\r\n                saveAsImage: { show: true },\r\n                \r\n            }\r\n        },\r\n        series: [\r\n            {\r\n                top:'30%',\r\n                name: '',\r\n                type: 'pie',\r\n                radius: [40, 150],\r\n                center: ['50%', '50%'],\r\n                roseType: 'radius',\r\n                label: {\r\n                    show: false\r\n                },\r\n                emphasis: {\r\n                    label: {\r\n                        show: true\r\n                    }\r\n                },\r\n                data: [\r\n                    { value: data.TotalConfirmed, name: 'Confirmed        ' },\r\n                    { value: data.NewConfirmed, name: 'New Confirmed ' },\r\n                    { value: data.TotalRecovered, name: 'Recovered' },\r\n                    { value: data.NewRecovered, name: 'New Recovered' },\r\n                    { value: data.TotalDeaths, name: 'deaths               ' },\r\n                    { value: data.NewDeaths, name: 'new deaths' },\r\n                ]\r\n            },\r\n\r\n        ]\r\n    };\r\n\r\n    return (\r\n\r\n        <ReactEcharts option={option} theme='theme' style={style} className=\"pie-chart\" />\r\n    )\r\n}\r\n\r\nexport default PieChart;","import axios from 'axios'\r\n\r\nconst urlSummary = \"https://api.covid19api.com/summary\"\r\n\r\nconst urlDailyTotal = 'https://pomber.github.io/covid19/timeseries.json';\r\n\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchSummaryData = async () => {\r\n    try {\r\n        const { data: { Global, Date, Countries } } = await axios.get(urlSummary);\r\n        console.log(Countries);\r\n        return { Global, Date, Countries };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async (name) => {\r\n    try {\r\n        const { data } = await axios.get(urlDailyTotal);\r\n\r\n        const modifiedData = data[name];\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchGlobalSummary = async () => {\r\n    try {\r\n        const { data: { Global, Date } } = await axios.get(urlSummary);\r\n        return { Global, Date };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountrySummary = async (name) => {\r\n    try {\r\n        const { data: { Countries } } = await axios.get(urlSummary);\r\n        console.log(Countries);\r\n        const modifiedData = Countries.find((item) => {\r\n            if (name === \"Cabo Verde\")\r\n                return item.Country === \"Cape Verde\";\r\n            else if (name === \"Czechia\")\r\n                return item.Country === \"Czech Republic\";\r\n            else if (name === \"Holy See\")\r\n                return item.Country === \"Holy See (Vatican City State)\";\r\n            else if (name === \"Iran\")\r\n                return item.Country === \"Iran, Islamic Republic of\";\r\n            else if (name === \"Korea, South\")\r\n                return item.Country === \"Korea (South)\";\r\n            else if (name === \"Russia\")\r\n                return item.Country === \"Russian Federation\";\r\n            else if (name === \"Saint Vincent and the Grenadines\")\r\n                return item.Country === \"Saint Vincent and Grenadines\";\r\n            else if (name === \"Taiwan*\")\r\n                return item.Country === \"Taiwan, Republic of China\";\r\n            else if (name === \"Tanzania\")\r\n                return item.Country === \"Tanzania, United Republic of\";\r\n            else if (name === \"US\")\r\n                return item.Country === \"United States of America\";\r\n            else if (name === \"Venezuela\")\r\n                return item.Country === \"Venezuela (Bolivarian Republic)\";\r\n            else if (name === \"Vietnam\")\r\n                return item.Country === \"Viet Nam\";\r\n            else if (name === \"Syria\")\r\n                return item.Country === \"Syrian Arab Republic (Syria)\";\r\n            else if (name === \"Laos\")\r\n                return item.Country === \"Lao PDR\";\r\n            else if (name === \"Laos\")\r\n                return item.Country === \"Lao PDR\";\r\n            else if (name === \"Laos\")\r\n                return item.Country === \"Lao PDR\";\r\n            else if (name === \"Laos\")\r\n                return item.Country === \"Lao PDR\";\r\n            else if (name === \"Laos\")\r\n                return item.Country === \"Lao PDR\";\r\n            else if (name === \"Laos\")\r\n                return item.Country === \"Lao PDR\";\r\n            return item.Country === name;\r\n        });\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const fetchDaily = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React,{useState,useEffect} from 'react'\r\nimport {fetchDaily} from '../../API/Json'\r\nimport {Line ,Bar} from 'react-chartjs-2'\r\n\r\nfunction Chart({daily}){\r\n    const [dailyData,setDailyData]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI=async()=>{\r\n            setDailyData(await fetchDaily());\r\n        }\r\n\r\n        fetchAPI();\r\n    })\r\n    \r\n    const lineChart=(\r\n        dailyData.length?\r\n        <Line\r\n            data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets:[{\r\n                    data:dailyData.map(({confirmed})=>confirmed),\r\n                    label:\"Infected\",\r\n                    borderColor:\"#3333ff\",\r\n                    fill:true,\r\n                },{\r\n                    data:dailyData.map(({deaths})=>deaths),\r\n                    label:\"recovered\",\r\n                    borderColor:\"red\",\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n                }]\r\n            }}\r\n        />:null\r\n    )\r\n\r\n    return(\r\n        <div>\r\n            {lineChart}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Chart;","export default\n{\n    \"color\": [\n        \"#2ec7c9\",\n        \"#b6a2de\",\n        \"#5ab1ef\",\n        \"#ffb980\",\n        \"#d87a80\",\n        \"#8d98b3\",\n        \"#e5cf0d\",\n        \"#97b552\",\n        \"#95706d\",\n        \"#dc69aa\",\n        \"#07a2a4\",\n        \"#9a7fd1\",\n        \"#588dd5\",\n        \"#f5994e\",\n        \"#c05050\",\n        \"#59678c\",\n        \"#c9ab00\",\n        \"#7eb00a\",\n        \"#6f5553\",\n        \"#c14089\"\n    ],\n    \"backgroundColor\": \"rgba(0,0,0,0)\",\n    \"textStyle\": {},\n    \"title\": {\n        \"textStyle\": {\n            \"color\": \"#008acd\"\n        },\n        \"subtextStyle\": {\n            \"color\": \"#aaaaaa\"\n        }\n    },\n    \"line\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 1\n            }\n        },\n        \"lineStyle\": {\n            \"normal\": {\n                \"width\": 2\n            }\n        },\n        \"symbolSize\": 3,\n        \"symbol\": \"emptyCircle\",\n        \"smooth\": true\n    },\n    \"radar\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 1\n            }\n        },\n        \"lineStyle\": {\n            \"normal\": {\n                \"width\": 2\n            }\n        },\n        \"symbolSize\": 3,\n        \"symbol\": \"emptyCircle\",\n        \"smooth\": true\n    },\n    \"bar\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"barBorderWidth\": 0,\n                \"barBorderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"barBorderWidth\": 0,\n                \"barBorderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"pie\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"scatter\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"boxplot\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"parallel\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"sankey\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"funnel\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"gauge\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            },\n            \"emphasis\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        }\n    },\n    \"candlestick\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"color\": \"#d87a80\",\n                \"color0\": \"#2ec7c9\",\n                \"borderColor\": \"#d87a80\",\n                \"borderColor0\": \"#2ec7c9\",\n                \"borderWidth\": 1\n            }\n        }\n    },\n    \"graph\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"borderWidth\": 0,\n                \"borderColor\": \"#ccc\"\n            }\n        },\n        \"lineStyle\": {\n            \"normal\": {\n                \"width\": 1,\n                \"color\": \"#aaaaaa\"\n            }\n        },\n        \"symbolSize\": 3,\n        \"symbol\": \"emptyCircle\",\n        \"smooth\": true,\n        \"color\": [\n            \"#2ec7c9\",\n            \"#b6a2de\",\n            \"#5ab1ef\",\n            \"#ffb980\",\n            \"#d87a80\",\n            \"#8d98b3\",\n            \"#e5cf0d\",\n            \"#97b552\",\n            \"#95706d\",\n            \"#dc69aa\",\n            \"#07a2a4\",\n            \"#9a7fd1\",\n            \"#588dd5\",\n            \"#f5994e\",\n            \"#c05050\",\n            \"#59678c\",\n            \"#c9ab00\",\n            \"#7eb00a\",\n            \"#6f5553\",\n            \"#c14089\"\n        ],\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#eeeeee\"\n                }\n            }\n        }\n    },\n    \"map\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"areaColor\": \"#dddddd\",\n                \"borderColor\": \"#eeeeee\",\n                \"borderWidth\": 0.5\n            },\n            \"emphasis\": {\n                \"areaColor\": \"rgba(254,153,78,1)\",\n                \"borderColor\": \"#444\",\n                \"borderWidth\": 1\n            }\n        },\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#d87a80\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"rgb(100,0,0)\"\n                }\n            }\n        }\n    },\n    \"geo\": {\n        \"itemStyle\": {\n            \"normal\": {\n                \"areaColor\": \"#dddddd\",\n                \"borderColor\": \"#eeeeee\",\n                \"borderWidth\": 0.5\n            },\n            \"emphasis\": {\n                \"areaColor\": \"rgba(254,153,78,1)\",\n                \"borderColor\": \"#444\",\n                \"borderWidth\": 1\n            }\n        },\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#d87a80\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"rgb(100,0,0)\"\n                }\n            }\n        }\n    },\n    \"categoryAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#008acd\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#333\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#333\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": false,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#eee\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": false,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"valueAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#008acd\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#333\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#333\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#eee\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": true,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"logAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#008acd\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#333\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#333\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#eee\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": true,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"timeAxis\": {\n        \"axisLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#008acd\"\n            }\n        },\n        \"axisTick\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": \"#333\"\n            }\n        },\n        \"axisLabel\": {\n            \"show\": true,\n            \"textStyle\": {\n                \"color\": \"#333\"\n            }\n        },\n        \"splitLine\": {\n            \"show\": true,\n            \"lineStyle\": {\n                \"color\": [\n                    \"#eee\"\n                ]\n            }\n        },\n        \"splitArea\": {\n            \"show\": false,\n            \"areaStyle\": {\n                \"color\": [\n                    \"rgba(250,250,250,0.3)\",\n                    \"rgba(200,200,200,0.3)\"\n                ]\n            }\n        }\n    },\n    \"toolbox\": {\n        \"iconStyle\": {\n            \"normal\": {\n                \"borderColor\": \"#2ec7c9\"\n            },\n            \"emphasis\": {\n                \"borderColor\": \"#18a4a6\"\n            }\n        }\n    },\n    \"legend\": {\n        \"textStyle\": {\n            \"color\": \"#333333\"\n        }\n    },\n    \"tooltip\": {\n        \"axisPointer\": {\n            \"lineStyle\": {\n                \"color\": \"#008acd\",\n                \"width\": \"1\"\n            },\n            \"crossStyle\": {\n                \"color\": \"#008acd\",\n                \"width\": \"1\"\n            }\n        }\n    },\n    \"timeline\": {\n        \"lineStyle\": {\n            \"color\": \"#008acd\",\n            \"width\": 1\n        },\n        \"itemStyle\": {\n            \"normal\": {\n                \"color\": \"#008acd\",\n                \"borderWidth\": 1\n            },\n            \"emphasis\": {\n                \"color\": \"#a9334c\"\n            }\n        },\n        \"controlStyle\": {\n            \"normal\": {\n                \"color\": \"#008acd\",\n                \"borderColor\": \"#008acd\",\n                \"borderWidth\": 0.5\n            },\n            \"emphasis\": {\n                \"color\": \"#008acd\",\n                \"borderColor\": \"#008acd\",\n                \"borderWidth\": 0.5\n            }\n        },\n        \"checkpointStyle\": {\n            \"color\": \"#2ec7c9\",\n            \"borderColor\": \"rgba(46,199,201,0.4)\"\n        },\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#008acd\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"#008acd\"\n                }\n            }\n        }\n    },\n    \"visualMap\": {\n        \"color\": [\n            \"#5ab1ef\",\n            \"#e0ffff\"\n        ]\n    },\n    \"dataZoom\": {\n        \"backgroundColor\": \"rgba(47,69,84,0)\",\n        \"dataBackgroundColor\": \"rgba(239,239,255,1)\",\n        \"fillerColor\": \"rgba(182,162,222,0.2)\",\n        \"handleColor\": \"#008acd\",\n        \"handleSize\": \"100%\",\n        \"textStyle\": {\n            \"color\": \"#333333\"\n        }\n    },\n    \"markPoint\": {\n        \"label\": {\n            \"normal\": {\n                \"textStyle\": {\n                    \"color\": \"#eeeeee\"\n                }\n            },\n            \"emphasis\": {\n                \"textStyle\": {\n                    \"color\": \"#eeeeee\"\n                }\n            }\n        }\n    }\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\r\nimport {\r\n    WorldCard, BarChart,\r\n    PieChart, LineChart, Chart\r\n} from './Component/Components'\r\n\r\nimport cx from 'classnames'\r\nimport { Grid, Card } from '@material-ui/core'\r\nimport style from './App.module.css'\r\nimport {  fetchCountrySummary, fetchGlobalSummary } from './API/Json'\r\n\r\nimport echartsTheme from './API/EChartTheme'\r\nimport echarts from 'echarts';\r\n\r\n\r\nconst countriesNames = [\r\n    \"Global\",\r\n    \"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\",\r\n    \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Australia\",\r\n    \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\",\r\n    \"Barbados\", \"Belarus\", \"Belgium\", \"Benin\", \"Bhutan\",\r\n    \"Bolivia\", \"Bosnia and Herzegovina\", \"Brazil\",\r\n    \"Bulgaria\", \"Burkina Faso\", \"Cabo Verde\", \"Cambodia\",\r\n    \"Canada\", \"Central African Republic\", \"Chad\",\r\n    \"Chile\", \"China\", \"Colombia\", \"Congo (Brazzaville)\",\r\n    \"Congo (Kinshasa)\", \"Costa Rica\", \"Croatia\",\r\n    \"Cuba\", \"Cyprus\", \"Czechia\", \"Denmark\",\r\n    \"Djibouti\", \"Dominican Republic\", \"Ecuador\", \"Egypt\",\r\n    \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\",\r\n    \"Ethiopia\", \"Fiji\", \"Finland\", \"France\", \"Gabon\",\r\n    \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Greece\", \"Guatemala\",\r\n    \"Guinea\", \"Guyana\", \"Haiti\", \"Holy See\", \"Honduras\", \"Hungary\",\r\n    \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\",\r\n    \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jordan\", \"Kazakhstan\",\r\n    \"Kenya\", \"Korea, South\", \"Kuwait\", \"Kyrgyzstan\", \"Latvia\",\r\n    \"Lebanon\", \"Liberia\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\",\r\n    \"Madagascar\", \"Malaysia\", \"Maldives\", \"Malta\", \"Mauritania\",\r\n    \"Mauritius\", \"Mexico\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\",\r\n    \"Morocco\", \"Namibia\", \"Nepal\", \"Netherlands\", \"New Zealand\",\r\n    \"Nicaragua\", \"Niger\", \"Nigeria\",\r\n    \"Norway\", \"Oman\", \"Pakistan\", \"Panama\", \"Papua New Guinea\",\r\n    \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\",\r\n    \"Qatar\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Lucia\",\r\n    \"Saint Vincent and the Grenadines\", \"San Marino\", \"Saudi Arabia\",\r\n    \"Senegal\", \"Serbia\", \"Seychelles\", \"Singapore\", \"Slovakia\",\r\n    \"Slovenia\", \"Somalia\", \"South Africa\", \"Spain\", \"Sri Lanka\",\r\n    \"Sudan\", \"Suriname\", \"Sweden\", \"Switzerland\", \"Taiwan*\",\r\n    \"Tanzania\", \"Thailand\", \"Togo\", \"Trinidad and Tobago\",\r\n    \"Tunisia\", \"Turkey\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\",\r\n    \"United Kingdom\", \"Uruguay\", \"US\", \"Uzbekistan\", \"Venezuela\",\r\n    \"Vietnam\", \"Zambia\", \"Zimbabwe\", \"Dominica\", \"Grenada\", \"Mozambique\",\r\n    \"Syria\", \"Timor-Leste\", \"Belize\", \"Laos\", \"Libya\", \r\n    \"Guinea-Bissau\", \"Mali\", \"Saint Kitts and Nevis\", \r\n    \"Botswana\", \"Burundi\", \"Sierra Leone\", \"Malawi\",\r\n    \"South Sudan\", \"Western Sahara\", \"Sao Tome and Principe\", \"Yemen\"\r\n];\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction AllComponent({ handleClick,data,date,countryName }) {\r\n\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    console.log(countryName)\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                {countriesNames.map((text, index) => (\r\n                    <ListItem button key={text} selected={text===countryName} onClick={() => handleClick(text)}>\r\n                        <ListItemIcon><Brightness1Icon /></ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        COVID-19 DATA VISUALIZATION\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        //container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <Charts data={data} date={date}></Charts>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nfunction Charts({ data,date }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            \r\n            <WorldCard data={data} date={date}/>\r\n\r\n            <Grid container spacing={1} justify='center'>\r\n                <Grid item xs={12} md={2}\r\n                    component={Card}\r\n                    className={cx(style.card)}\r\n                >\r\n                    <BarChart data={data} />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} md={2}\r\n                    component={Card}\r\n                    className={cx(style.card)}\r\n                >\r\n                    <PieChart data={data} />\r\n\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </main>\r\n    )\r\n}\r\n\r\nclass MainPage extends React.Component {\r\n\r\n    state = {\r\n        dailyData: {},\r\n        updateTime: {},\r\n        dailySeries:[],\r\n        countryName:{}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const data = await fetchGlobalSummary();\r\n        this.setState({ dailyData: data.Global });\r\n    }\r\n\r\n    componentWillMount(){\r\n        echarts.registerTheme('theme', echartsTheme);\r\n    }\r\n\r\n    handleClick = async (name) => {\r\n        this.state.countryName=name;\r\n        if (name === \"Global\") {\r\n            const summarydata = await fetchGlobalSummary();\r\n\r\n            this.setState({ dailyData: summarydata.Global });\r\n            this.setState({ updateTime: summarydata.Date });\r\n\r\n        } else {\r\n            \r\n            const summarydata = await fetchCountrySummary(name);\r\n            this.setState({ dailyData: summarydata })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AllComponent handleClick={this.handleClick}\r\n                    data={this.state.dailyData}\r\n                    date={this.state.updateTime}\r\n                    countryName={this.state.countryName}\r\n                ></AllComponent>\r\n               \r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nMainPage.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    container: PropTypes.any,\r\n};\r\n\r\nexport default MainPage;","import React from 'react'\r\nimport MainPage from './AllComponent'\r\n\r\n\r\n\r\nfunction App(){\r\n    return <MainPage/>\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}